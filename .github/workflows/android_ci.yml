name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v3

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3.2.2
      with:
        packages: 'platform-tools build-tools;34.0.0'

    - name: Add build tools to PATH
      run: echo "$ANDROID_HOME/build-tools/34.0.0" >> $GITHUB_PATH

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Get version name
      id: get_version
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle.kts | sed -n 's/.*"\(.*\)".*/\1/p')
        echo "version=$VERSION_NAME" >> $GITHUB_OUTPUT

    - name: Decode Keystore
      run: echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 --decode > broadcast.keystore

    - name: Build release APK
      run: ./gradlew assembleRelease
      env:
        KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}

    - name: Sign APK
      run: |
        zipalign -p 4 app/build/outputs/apk/release/app-release.apk app-release-aligned.apk
        apksigner sign \
          --ks broadcast.keystore \
          --ks-key-alias ${{ secrets.KEYSTORE_KEY_ALIAS }} \
          --ks-pass env:KEYSTORE_STORE_PASSWORD \
          --key-pass env:KEYSTORE_KEY_PASSWORD \
          --out Broadcast-${{ steps.get_version.outputs.version }}.apk \
          app-release-aligned.apk
      env:
        KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}

    - name: Upload Signed APK
      uses: actions/upload-artifact@v4
      with:
        name: signed-apk
        path: Broadcast-${{ steps.get_version.outputs.version }}.apk

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run lint
      run: ./gradlew lint
    - name: Run tests
      run: ./gradlew test

  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: signed-apk
        path: .

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.build.outputs.version_name }}
        name: Broadcast-${{ needs.build.outputs.version_name }}
        files: Broadcast-${{ needs.build.outputs.version_name }}.apk