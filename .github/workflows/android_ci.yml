name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Get version name
      id: get_version
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle.kts | sed -n 's/.*"\(.*\)".*/\1/p')
        echo "::set-output name=version::$VERSION_NAME"
    - name: Build release APK
      run: ./gradlew assembleRelease
    - name: Rename APK
      run: mv app/build/outputs/apk/release/app-release-unsigned.apk Broadcast-${{ steps.get_version.outputs.version }}.apk
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: Broadcast-${{ steps.get_version.outputs.version }}.apk

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run lint
      run: ./gradlew lint
    - name: Run tests
      run: ./gradlew test

  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: app-release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        files: Broadcast-${{ needs.build.outputs.version_name }}.apk
